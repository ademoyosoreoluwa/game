{"ast":null,"code":"var _jsxFileName = \"/Users/eagleseyes/Desktop/tic-tac/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `square ${isWinningSquare ? 'winning-square' : ''}`,\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  onReset\n}) {\n  const {\n    winner,\n    winningLine\n  } = calculateWinner(squares);\n  let status = winner === 'draw' ? 'No winner: Restart the game.' : winner ? 'winner: ' + winner : 'Player: ' + (xIsNext ? '1' : '2');\n  // if (xIsNext) { \n  //   nextSquares[i] = '♟️' ;\n  // } else { \n  //   nextSquares[i] = '⚜️';\n  // }\n\n  // let status;\n  // if (winner === 'draw') {\n  //   status = 'No winner: Restart the game.';\n  // } else if (winner) {\n  //   statue = 'Winner: ' + winner;  \n  // } else {\n  //   status = 'Player: ' + (xIsNext ? '1' : '2');\n  // }\n\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) return;\n    const nextSquares = squares.slice();\n    nextSquares[i] = xIsNext ? '♟️' : '⚜️';\n    onPlay(nextSquares);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), squares.map((square, i) => /*#__PURE__*/_jsxDEV(Square, {\n      value: square,\n      onSquareClick: () => handleClick(i),\n      isWinningSquare: winningLine.includes(i)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)), winner && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onReset,\n      children: \"Restart Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function resetGame() {\n    setHistory([Array(9).fill(null)]);\n    setCurrentMove(0);\n  }\n  const moves = history.map((squares, move) => {\n    let description = move !== 0 ? 'Go to move No: ' + move : 'Begin the game !';\n\n    // let description;\n    // if (move > 0) {\n    //   description = 'Go to move #' + move;\n    // } else {\n    //   description = 'Go to game start';\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        onReset: resetGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"xZZdy1/aP1agxyjHn6CL01lXnXc=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) return {\n      winner: squares[a],\n      winningLine: [a, b, c]\n    };\n  }\n  if (!squares.includes(null)) return {\n    winner: 'draw',\n    winningLine: []\n  };\n  return {\n    winner: null,\n    winningLine: []\n  };\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","isWinningSquare","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","onReset","winner","winningLine","calculateWinner","status","handleClick","i","nextSquares","slice","map","square","includes","_c2","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","resetGame","moves","move","description","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/eagleseyes/Desktop/tic-tac/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    <button className= { `square ${isWinningSquare ? 'winning-square' : ''}`} onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay, onReset }) {\n  const {winner, winningLine } = calculateWinner(squares);\n  let status = (winner === 'draw')? 'No winner: Restart the game.' : winner? 'winner: ' + winner : 'Player: ' + (xIsNext ? '1' : '2');\n    // if (xIsNext) { \n    //   nextSquares[i] = '♟️' ;\n    // } else { \n    //   nextSquares[i] = '⚜️';\n    // }\n\n     // let status;\n  // if (winner === 'draw') {\n  //   status = 'No winner: Restart the game.';\n  // } else if (winner) {\n  //   statue = 'Winner: ' + winner;  \n  // } else {\n  //   status = 'Player: ' + (xIsNext ? '1' : '2');\n  // }\n\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) return;\n    const nextSquares = squares.slice();\n    nextSquares[i] = xIsNext ? '♟️' : '⚜️';\n    onPlay(nextSquares);\n  }\n\n  return (\n    <>\n      <div className='status'>{status}</div>\n      <div className='board-row'></div>\n        {squares.map((square, i) => (\n          <Square \n          key={i} \n          value={square} \n          onSquareClick={ () => handleClick(i)} \n          isWinningSquare={winningLine.includes(i)}\n          />\n        ))}\n\n      \n          \n            \n          \n      \n      \n      \n      {/* <div className='status'>{status}</div>\n      <div className='board-row'>\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className='board-row'>\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className='board-row'>\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div> */}\n      {winner && <button onClick={onReset}>Restart Game</button>}\n    </>\n  );\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  function resetGame() {\n    setHistory([Array(9).fill(null)]);\n    setCurrentMove(0);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description = (move !== 0) ? 'Go to move No: ' + move : 'Begin the game !';\n\n    // let description;\n    // if (move > 0) {\n    //   description = 'Go to move #' + move;\n    // } else {\n    //   description = 'Go to game start';\n    // }\n\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  })\n\n  return (\n    <div className='game'>\n      <div className='game-board'>\n        <Board \n          xIsNext={xIsNext} \n          squares={currentSquares} \n          onPlay={handlePlay}\n          onReset={resetGame} \n        />\n      </div>\n      <div className='game-info'>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) return { winner: squares[a], winningLine: [a, b, c] };\n  }\n  if (!squares.includes(null)) return { winner: 'draw', winningLine: [] };\n  return { winner: null, winningLine: []}; \n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}